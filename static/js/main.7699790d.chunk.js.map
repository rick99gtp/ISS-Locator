{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","lat","setLat","lon","setLon","dataReady","setDataReady","getData","a","fetch","iss_info","json","iss_data","useEffect","latitude","longitude","setTimeout","className","src","alt","MapContainer","style","height","width","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","position","Popup","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSA8DeA,MAzDf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,mBAAS,GAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEMC,EAAO,uCAAG,8BAAAC,EAAA,sEACSC,MAAM,kDADf,cACRC,EADQ,gBAESA,EAASC,OAFlB,OAERC,EAFQ,OAGdZ,EAAQY,GAHM,2CAAH,qDA4Bb,OAtBAC,qBAAU,WACHd,GACHQ,MAED,IAEHM,qBAAU,WACR,GAAGd,EAAM,CACUA,EAAKe,SAAUf,EAAKgB,UAErCb,EAAOH,EAAKe,UACZV,EAAOL,EAAKgB,WAEZT,GAAa,GAEbU,YAAW,WACTT,MACC,QAGJ,CAACR,IAGF,sBAAKkB,UAAU,MAAf,UACE,qBAAKC,IAAI,0HAA0HC,IAAI,gCACtId,EAAY,eAACe,EAAA,EAAD,CACXC,MAAO,CAAEC,OAAQ,QAASC,MAAO,SACjCC,OAAQ,CAACvB,EAAKE,GACdsB,KAAM,EACNC,iBAAiB,EAJN,UAKT,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACC,EAAA,EAAD,CAAQC,SAAU,CAAC9B,EAAKE,GAAxB,SACE,eAAC6B,EAAA,EAAD,mCACuB,uBADvB,6BAVO,OAcO,SC5CXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7699790d.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react/cjs/react.development';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\n\nfunction App() {\n  const [data, setData] = useState('');\n  const [lat, setLat] = useState(0);\n  const [lon, setLon] = useState(0);\n  const [dataReady, setDataReady] = useState(false);\n    \n  const getData = async function getISSData() {\n    const iss_info = await fetch(\"https://api.wheretheiss.at/v1/satellites/25544\");\n    const iss_data = await iss_info.json();\n    setData(iss_data);\n  };\n\n  useEffect(() => {\n    if (!data) {\n      getData();\n    }\n  }, []);\n\n  useEffect(() => {\n    if(data) {\n      const thisPos = [data.latitude, data.longitude];\n\n      setLat(data.latitude);\n      setLon(data.longitude);\n\n      setDataReady(true);\n\n      setTimeout(() => {\n        getData();\n      }, 2000);\n    }\n\n  }, [data]);\n\n  return (\n    <div className=\"App\">\n      <img src=\"https://www.nasa.gov/sites/default/files/styles/card_page_banner/public/thumbnails/image/iss_banner_webage_20191030.jpg\" alt=\"International Space Station\" />\n      {dataReady ? <MapContainer\n        style={{ height: '500px', width: '800px' }}\n        center={[lat, lon]}\n        zoom={5}\n        scrollWheelZoom={true}>\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <Marker position={[lat, lon]}>\n            <Popup>\n              A pretty CSS3 popup. <br /> Easily customizable.\n            </Popup>\n          </Marker>}\n        </MapContainer> : null\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}